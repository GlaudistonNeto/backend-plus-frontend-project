{"remainingRequest":"G:\\nodejs\\udemy\\vue\\knowledge\\versao-inicial\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!G:\\nodejs\\udemy\\vue\\knowledge\\versao-inicial\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\nodejs\\udemy\\vue\\knowledge\\versao-inicial\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\nodejs\\udemy\\vue\\knowledge\\versao-inicial\\frontend\\src\\components\\admin\\UserAdmin.vue?vue&type=template&id=0c9160f8&","dependencies":[{"path":"G:\\nodejs\\udemy\\vue\\knowledge\\versao-inicial\\frontend\\src\\components\\admin\\UserAdmin.vue","mtime":1586126653794},{"path":"G:\\nodejs\\udemy\\vue\\knowledge\\versao-inicial\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1586019558000},{"path":"G:\\nodejs\\udemy\\vue\\knowledge\\versao-inicial\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1586019558000},{"path":"G:\\nodejs\\udemy\\vue\\knowledge\\versao-inicial\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1586019558000},{"path":"G:\\nodejs\\udemy\\vue\\knowledge\\versao-inicial\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1586019558000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"user-admin\" },\n    [\n      _c(\n        \"b-form\",\n        [\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.user.id,\n                expression: \"user.id\"\n              }\n            ],\n            attrs: { id: \"user-id\", type: \"hidden\" },\n            domProps: { value: _vm.user.id },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.$set(_vm.user, \"id\", $event.target.value)\n              }\n            }\n          }),\n          _c(\n            \"b-row\",\n            [\n              _c(\n                \"b-col\",\n                { attrs: { md: \"6\", sm: \"12\" } },\n                [\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Name:\", \"label-for\": \"user-name\" } },\n                    [\n                      _c(\"b-form-input\", {\n                        attrs: {\n                          id: \"user-name\",\n                          type: \"text\",\n                          required: \"\",\n                          readonly: _vm.mode === \"remove\",\n                          placeholder: \"Enter the user name...\"\n                        },\n                        model: {\n                          value: _vm.user.name,\n                          callback: function($$v) {\n                            _vm.$set(_vm.user, \"name\", $$v)\n                          },\n                          expression: \"user.name\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"b-col\",\n                { attrs: { md: \"6\", sm: \"12\" } },\n                [\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Email:\", \"label-for\": \"user-email\" } },\n                    [\n                      _c(\"b-form-input\", {\n                        attrs: {\n                          id: \"user-email\",\n                          type: \"text\",\n                          required: \"\",\n                          readonly: _vm.mode === \"remove\",\n                          placeholder: \"Enter User Email...\"\n                        },\n                        model: {\n                          value: _vm.user.email,\n                          callback: function($$v) {\n                            _vm.$set(_vm.user, \"email\", $$v)\n                          },\n                          expression: \"user.email\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"b-form-checkbox\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.mode === \"save\",\n                  expression: \"mode === 'save'\"\n                }\n              ],\n              staticClass: \"mt-3 mb-3\",\n              attrs: { id: \"user-admin\" },\n              model: {\n                value: _vm.user.admin,\n                callback: function($$v) {\n                  _vm.$set(_vm.user, \"admin\", $$v)\n                },\n                expression: \"user.admin\"\n              }\n            },\n            [_vm._v(\"\\n            Administrator?\\n        \")]\n          ),\n          _c(\n            \"b-row\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.mode === \"save\",\n                  expression: \"mode === 'save'\"\n                }\n              ]\n            },\n            [\n              _c(\n                \"b-col\",\n                { attrs: { md: \"6\", sm: \"12\" } },\n                [\n                  _c(\n                    \"b-form-group\",\n                    {\n                      attrs: {\n                        label: \"Password:\",\n                        \"label-for\": \"user-password\"\n                      }\n                    },\n                    [\n                      _c(\"b-form-input\", {\n                        attrs: {\n                          id: \"user-password\",\n                          type: \"password\",\n                          required: \"\",\n                          placeholder: \"Enter User Password...\"\n                        },\n                        model: {\n                          value: _vm.user.password,\n                          callback: function($$v) {\n                            _vm.$set(_vm.user, \"password\", $$v)\n                          },\n                          expression: \"user.password\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"b-col\",\n                { attrs: { md: \"6\", sm: \"12\" } },\n                [\n                  _c(\n                    \"b-form-group\",\n                    {\n                      attrs: {\n                        label: \"Password Confirmation:\",\n                        \"label-for\": \"user-confirm-password\"\n                      }\n                    },\n                    [\n                      _c(\"b-form-input\", {\n                        attrs: {\n                          id: \"user-confirm-password\",\n                          type: \"password\",\n                          required: \"\",\n                          placeholder: \"Confirm User Password...\"\n                        },\n                        model: {\n                          value: _vm.user.confirmPassword,\n                          callback: function($$v) {\n                            _vm.$set(_vm.user, \"confirmPassword\", $$v)\n                          },\n                          expression: \"user.confirmPassword\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"b-row\",\n            [\n              _c(\n                \"b-col\",\n                { attrs: { xs: \"12\" } },\n                [\n                  _vm.mode === \"save\"\n                    ? _c(\n                        \"b-button\",\n                        {\n                          attrs: { variant: \"success\" },\n                          on: { click: _vm.save }\n                        },\n                        [_vm._v(\"Salvar\")]\n                      )\n                    : _vm._e(),\n                  _vm.mode === \"remove\"\n                    ? _c(\n                        \"b-button\",\n                        {\n                          attrs: { variant: \"danger\" },\n                          on: { click: _vm.remove }\n                        },\n                        [_vm._v(\"Excluir\")]\n                      )\n                    : _vm._e(),\n                  _c(\n                    \"b-button\",\n                    { staticClass: \"ml-2\", on: { click: _vm.reset } },\n                    [_vm._v(\"Cancelar\")]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\"hr\"),\n      _c(\"b-table\", {\n        attrs: { hover: \"\", striped: \"\", items: _vm.users, fields: _vm.fields },\n        scopedSlots: _vm._u([\n          {\n            key: \"actions\",\n            fn: function(data) {\n              return [\n                _c(\n                  \"b-button\",\n                  {\n                    staticClass: \"mr-2\",\n                    attrs: { variant: \"warning\" },\n                    on: {\n                      click: function($event) {\n                        _vm.loadUser(data.item)\n                      }\n                    }\n                  },\n                  [_c(\"i\", { staticClass: \"fa fa-pencil\" })]\n                ),\n                _c(\n                  \"b-button\",\n                  {\n                    attrs: { variant: \"danger\" },\n                    on: {\n                      click: function($event) {\n                        _vm.loadUser(data.item, \"remove\")\n                      }\n                    }\n                  },\n                  [_c(\"i\", { staticClass: \"fa fa-trash\" })]\n                )\n              ]\n            }\n          }\n        ])\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}