{"remainingRequest":"G:\\nodejs\\udemy\\vue\\knowledge\\versao-inicial\\frontend\\node_modules\\babel-loader\\lib\\index.js!G:\\nodejs\\udemy\\vue\\knowledge\\versao-inicial\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\nodejs\\udemy\\vue\\knowledge\\versao-inicial\\frontend\\src\\components\\template\\Menu.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\nodejs\\udemy\\vue\\knowledge\\versao-inicial\\frontend\\src\\components\\template\\Menu.vue","mtime":1586292362749},{"path":"G:\\nodejs\\udemy\\vue\\knowledge\\versao-inicial\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1586019558000},{"path":"G:\\nodejs\\udemy\\vue\\knowledge\\versao-inicial\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1586019558000},{"path":"G:\\nodejs\\udemy\\vue\\knowledge\\versao-inicial\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1586019558000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport Tree from 'liquor-tree';\nimport { baseApiUrl } from '@/global';\nimport axios from 'axios';\nexport default {\n  name: 'Menu',\n  components: {\n    Tree: Tree\n  },\n  computed: mapState(['isMenuVisible']),\n  data: function data() {\n    return {\n      treeFilter: '',\n      treeData: this.getTreeData(),\n      treeOptions: {\n        propertyNames: {\n          'text': 'name'\n        },\n        filter: {\n          emptyText: 'Category not found'\n        }\n      }\n    };\n  },\n  methods: {\n    getTreeData: function getTreeData() {\n      var url = \"\".concat(baseApiUrl, \"/categories/tree\");\n      return axios.get(url).then(function (res) {\n        return res.data;\n      });\n    },\n    onNodeSelect: function onNodeSelect(node) {\n      this.$router.push({\n        name: 'articlesByCategory',\n        params: {\n          id: node.id\n        }\n      });\n\n      if (this.$mq === 'xs' || this.$mq === 'sm') {\n        this.$store.commit('toggleMenu', false);\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.$refs.tree.$on('node:selected', this.onNodeSelect);\n  }\n};",{"version":3,"sources":["Menu.vue"],"names":[],"mappings":";;;;;;;;;;;;AAaA,SAAA,QAAA,QAAA,MAAA;AACA,OAAA,IAAA,MAAA,aAAA;AACA,SAAA,UAAA,QAAA,UAAA;AACA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;AACA,QAAA,MADA;AAEA,cAAA;AAAA;AAAA,GAFA;AAGA,YAAA,SAAA,CAAA,eAAA,CAAA,CAHA;AAIA,QAAA,gBAAA;AACA,WAAA;AACA,kBAAA,EADA;AAEA,gBAAA,KAAA,WAAA,EAFA;AAGA,mBAAA;AACA,uBAAA;AAAA,kBAAA;AAAA,SADA;AAEA,gBAAA;AAAA,qBAAA;AAAA;AAFA;AAHA,KAAA;AAQA,GAbA;AAcA,WAAA;AACA,eADA,yBACA;AACA,UAAA,gBAAA,UAAA,qBAAA;AACA,aAAA,MAAA,GAAA,CAAA,GAAA,EAAA,IAAA,CAAA;AAAA,eAAA,IAAA,IAAA;AAAA,OAAA,CAAA;AACA,KAJA;AAKA,gBALA,wBAKA,IALA,EAKA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AACA,cAAA,oBADA;AAEA,gBAAA;AAAA,cAAA,KAAA;AAAA;AAFA,OAAA;;AAKA,UAAA,KAAA,GAAA,KAAA,IAAA,IAAA,KAAA,GAAA,KAAA,IAAA,EAAA;AACA,aAAA,MAAA,CAAA,MAAA,CAAA,YAAA,EAAA,KAAA;AACA;AACA;AAdA,GAdA;AA8BA,SA9BA,qBA8BA;AACA,SAAA,KAAA,CAAA,IAAA,CAAA,GAAA,CAAA,eAAA,EAAA,KAAA,YAAA;AACA;AAhCA,CAAA","sourcesContent":["<template>\n    <aside class=\"menu\" v-show=\"isMenuVisible\">\n        <div class=\"menu-filter\">\n            <i class=\"fa fa-search fa-lg\"></i>\n            <input type=\"text\" placeholder=\"Type to filter...\"\n                v-model=\"treeFilter\" class=\"filter-field\">\n        </div>\n        <Tree :data=\"treeData\" :options=\"treeOptions\"\n            :filter=\"treeFilter\" ref=\"tree\" />\n    </aside>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nimport Tree from 'liquor-tree'\nimport { baseApiUrl } from '@/global'\nimport axios from 'axios'\n\nexport default {\n    name: 'Menu',\n    components: { Tree },\n    computed: mapState(['isMenuVisible']),\n    data: function() {\n        return {\n            treeFilter: '',\n            treeData: this.getTreeData(),\n            treeOptions: {\n                propertyNames: { 'text': 'name' },\n                filter: { emptyText: 'Category not found' }\n            }\n        }\n    },\n    methods: {\n        getTreeData() {\n            const url = `${baseApiUrl}/categories/tree`\n            return axios.get(url).then(res => res.data)\n        },\n        onNodeSelect(node) {\n            this.$router.push({\n                name: 'articlesByCategory',\n                params: { id: node.id }\n            })\n\n            if(this.$mq === 'xs' || this.$mq === 'sm') {\n                this.$store.commit('toggleMenu', false)\n            }\n        }\n    },\n    mounted() {\n        this.$refs.tree.$on('node:selected', this.onNodeSelect)\n    }\n}\n</script>\n\n<style>\n    .menu {\n        grid-area: menu;\n        background: linear-gradient(to right, #232526, #414345);\n\n        display: flex;\n        flex-direction: column;\n        flex-wrap: wrap;\n    }\n\n    .menu a,\n    .menu a:hover {\n        color: #fff;\n        text-decoration: none;\n    }\n\n    .menu .tree-node.selected > .tree-content,\n    .menu .tree-node .tree-content:hover {\n        background-color: rgba(255, 255, 255, 0.2);\n    }\n\n    .tree-arrow.has-child {\n        filter: brightness(2);\n    }\n\n    .menu .menu-filter {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        margin: 20px;\n        padding-bottom: 8px;\n        border-bottom: 1px solid #AAA;\n    }\n\n    .menu .menu-filter i {\n        color: #AAA;\n        margin-right: 10px;\n    }\n\n    .menu input {\n        color: #CCC;\n        font-size: 1.3rem;\n        border: 0;\n        outline: 0;\n        width: 100%;\n        background: transparent;\n    }\n\n    .tree-filter-empty {\n        color: #CCC;\n        font-size: 1.3rem;\n        margin-left: 20px;\n    }\n</style>\n"],"sourceRoot":"src\\components\\template"}]}