{"remainingRequest":"G:\\nodejs\\udemy\\vue\\knowledge\\versao-inicial\\frontend\\node_modules\\babel-loader\\lib\\index.js!G:\\nodejs\\udemy\\vue\\knowledge\\versao-inicial\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\nodejs\\udemy\\vue\\knowledge\\versao-inicial\\frontend\\src\\components\\admin\\ArticleAdmin.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\nodejs\\udemy\\vue\\knowledge\\versao-inicial\\frontend\\src\\components\\admin\\ArticleAdmin.vue","mtime":1586126559868},{"path":"G:\\nodejs\\udemy\\vue\\knowledge\\versao-inicial\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1586019558000},{"path":"G:\\nodejs\\udemy\\vue\\knowledge\\versao-inicial\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1586019558000},{"path":"G:\\nodejs\\udemy\\vue\\knowledge\\versao-inicial\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1586019558000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { VueEditor } from \"vue2-editor\";\nimport { baseApiUrl, showError } from '@/global';\nimport axios from 'axios';\nexport default {\n  name: 'ArticleAdmin',\n  components: {\n    VueEditor: VueEditor\n  },\n  data: function data() {\n    return {\n      mode: 'save',\n      article: {},\n      articles: [],\n      categories: [],\n      users: [],\n      page: 1,\n      limit: 0,\n      count: 0,\n      fields: [{\n        key: 'id',\n        label: 'Code',\n        sortable: true\n      }, {\n        key: 'name',\n        label: 'Name',\n        sortable: true\n      }, {\n        key: 'description',\n        label: 'Description',\n        sortable: true\n      }, {\n        key: 'actions',\n        label: 'Actions'\n      }]\n    };\n  },\n  methods: {\n    loadArticles: function loadArticles() {\n      var _this = this;\n\n      var url = \"\".concat(baseApiUrl, \"/articles?page=\").concat(this.page);\n      axios.get(url).then(function (res) {\n        _this.articles = res.data.data;\n        _this.count = res.data.count;\n        _this.limit = res.data.limit;\n      });\n    },\n    reset: function reset() {\n      this.mode = 'save';\n      this.article = {};\n      this.loadArticles();\n    },\n    save: function save() {\n      var _this2 = this;\n\n      var method = this.article.id ? 'put' : 'post';\n      var id = this.article.id ? \"/\".concat(this.article.id) : '';\n      axios[method](\"\".concat(baseApiUrl, \"/articles\").concat(id), this.article).then(function () {\n        _this2.$toasted.global.defaultSuccess();\n\n        _this2.reset();\n      }).catch(showError);\n    },\n    remove: function remove() {\n      var _this3 = this;\n\n      var id = this.article.id;\n      axios.delete(\"\".concat(baseApiUrl, \"/articles/\").concat(id)).then(function () {\n        _this3.$toasted.global.defaultSuccess();\n\n        _this3.reset();\n      }).catch(showError);\n    },\n    loadArticle: function loadArticle(article) {\n      var _this4 = this;\n\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'save';\n      this.mode = mode;\n      axios.get(\"\".concat(baseApiUrl, \"/articles/\").concat(article.id)).then(function (res) {\n        return _this4.article = res.data;\n      });\n    },\n    loadCategories: function loadCategories() {\n      var _this5 = this;\n\n      var url = \"\".concat(baseApiUrl, \"/categories\");\n      axios.get(url).then(function (res) {\n        _this5.categories = res.data.map(function (category) {\n          return {\n            value: category.id,\n            text: category.path\n          };\n        });\n      });\n    },\n    loadUsers: function loadUsers() {\n      var _this6 = this;\n\n      var url = \"\".concat(baseApiUrl, \"/users\");\n      axios.get(url).then(function (res) {\n        _this6.users = res.data.map(function (user) {\n          return {\n            value: user.id,\n            text: \"\".concat(user.name, \" - \").concat(user.email)\n          };\n        });\n      });\n    }\n  },\n  watch: {\n    page: function page() {\n      this.loadArticles();\n    }\n  },\n  mounted: function mounted() {\n    this.loadUsers();\n    this.loadCategories();\n    this.loadArticles();\n  }\n};",{"version":3,"sources":["ArticleAdmin.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"article-admin\">\n        <b-form>\n            <input id=\"article-id\" type=\"hidden\" v-model=\"article.id\" />\n            <b-form-group label=\"Name:\" label-for=\"article-name\">\n                <b-form-input id=\"article-name\" type=\"text\"\n                    v-model=\"article.name\" required\n                    :readonly=\"mode === 'remove'\"\n                    placeholder=\"Enter the Article Name...\" />\n            </b-form-group>\n            <b-form-group label=\"Description\" label-for=\"article-description\">\n                <b-form-input id=\"article-description\" type=\"text\"\n                    v-model=\"article.description\" required\n                    :readonly=\"mode === 'remove'\"\n                    placeholder=\"Enter the Article Name...\" />\n            </b-form-group>\n            <b-form-group v-if=\"mode === 'save'\"\n                label=\"Image (URL):\" label-for=\"article-imageUrl\">\n                <b-form-input id=\"article-imageUrl\" type=\"text\"\n                    v-model=\"article.imageUrl\" required\n                    :readonly=\"mode === 'remove'\"\n                    placeholder=\"Enter the Image Url..\" />\n            </b-form-group>\n            <b-form-group v-if=\"mode === 'save'\" \n                label=\"Category:\" label-for=\"article-categoryId\">\n                <b-form-select id=\"article-categoryId\"\n                    :options=\"categories\" v-model=\"article.categoryId\" />\n            </b-form-group>\n            <b-form-group v-if=\"mode === 'save'\" \n                label=\"Author:\" label-for=\"article-userId\">\n                <b-form-select id=\"article-userId\"\n                    :options=\"users\" v-model=\"article.userId\" />\n            </b-form-group>\n            <b-form-group v-if=\"mode === 'save'\"\n                label=\"Content\" label-for=\"article-content\">\n                <VueEditor v-model=\"article.content\"\n                    placeholder=\"Enter Article Content...\" />\n            </b-form-group>\n            <b-button variant=\"success\" v-if=\"mode === 'save'\"\n                @click=\"save\">Salve</b-button>\n            <b-button variant=\"danger\" v-if=\"mode === 'remove'\"\n                @click=\"remove\">Remove</b-button>\n            <b-button class=\"ml-2\" @click=\"reset\">Cancel</b-button>\n        </b-form>\n        <hr>\n        <b-table hover striped :items=\"articles\" :fields=\"fields\">\n            <template slot=\"actions\" slot-scope=\"data\">\n                <b-button variant=\"warning\" @click=\"loadArticle(data.item)\" class=\"mr-2\">\n                    <i class=\"fa fa-pencil\"></i>\n                </b-button>\n                <b-button variant=\"danger\" @click=\"loadArticle(data.item, 'remove')\">\n                    <i class=\"fa fa-trash\"></i>\n                </b-button>\n            </template>\n        </b-table>\n        <b-pagination size=\"md\" v-model=\"page\" :total-rows=\"count\" :per-page=\"limit\" />\n    </div>\n</template>\n\n<script>\nimport { VueEditor } from \"vue2-editor\"\nimport { baseApiUrl, showError } from '@/global'\nimport axios from 'axios'\n\nexport default {\n    name: 'ArticleAdmin',\n    components: { VueEditor },\n    data: function() {\n        return {\n            mode: 'save',\n            article: {},\n            articles: [],\n            categories: [],\n            users: [],\n            page: 1,\n            limit: 0,\n            count: 0,\n            fields: [\n                { key: 'id', label: 'Code', sortable: true },\n                { key: 'name', label: 'Name', sortable: true },\n                { key: 'description', label: 'Description', sortable: true },\n                { key: 'actions', label: 'Actions' }\n            ]\n        }\n    },\n    methods: {\n        loadArticles() {\n            const url = `${baseApiUrl}/articles?page=${this.page}`\n            axios.get(url).then(res => {\n                this.articles = res.data.data\n                this.count = res.data.count\n                this.limit = res.data.limit\n            })\n        },\n        reset() {\n            this.mode = 'save'\n            this.article = {}\n            this.loadArticles()\n        },\n        save() {\n            const method = this.article.id ? 'put' : 'post'\n            const id = this.article.id ? `/${this.article.id}` : ''\n            axios[method](`${baseApiUrl}/articles${id}`, this.article)\n                .then(() => {\n                    this.$toasted.global.defaultSuccess()\n                    this.reset()\n                })\n                .catch(showError)\n        },\n        remove() {\n            const id = this.article.id\n            axios.delete(`${baseApiUrl}/articles/${id}`)\n                .then(() => {\n                    this.$toasted.global.defaultSuccess()\n                    this.reset()\n                })\n                .catch(showError)\n        },\n        loadArticle(article, mode = 'save') {\n            this.mode = mode\n            axios.get(`${baseApiUrl}/articles/${article.id}`)\n                .then(res => this.article = res.data)\n        },\n        loadCategories() {\n            const url = `${baseApiUrl}/categories`\n            axios.get(url).then(res => {\n                this.categories = res.data.map(category => {\n                    return { value: category.id, text: category.path }\n                })\n            })\n        },\n        loadUsers() {\n            const url = `${baseApiUrl}/users`\n            axios.get(url).then(res => {\n                this.users = res.data.map(user => {\n                    return { value: user.id, text: `${user.name} - ${user.email}` }\n                })\n            })\n        }\n    },\n    watch: {\n        page() {\n            this.loadArticles()\n        }\n    },\n    mounted() {\n        this.loadUsers()\n        this.loadCategories()\n        this.loadArticles()\n    }\n}\n</script>\n\n<style>\n\n</style>"],"sourceRoot":"src\\components\\admin"}]}